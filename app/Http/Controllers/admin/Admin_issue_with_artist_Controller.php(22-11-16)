<?php
namespace App\Http\Controllers\admin;
use Validator;
use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use App\Models\User;
use DB;
use Illuminate\Routing\Route;
use Mail;
use App\Customlibrary\Imageuploadlib;
class Admin_issue_with_artist_Controller extends Controller
{       
        public function index(Request $request )
    {
            $data=array();
            $useinPagiAr=array();           
            $srch1=addslashes(trim($request->input('srch1','')));
            $sort1=addslashes(trim($request->input('sort1','')));
            $sorttype1=addslashes(trim($request->input('sorttype1','')));           
            if(!empty($srch1))
            {
                $useinPagiAr['srch1']=trim($srch1);  
            }            
            if(!empty($sort1))
            {
                $useinPagiAr['sort1']=trim($sort1);  
            }           
            if(!empty($sorttype1))
            {
                $useinPagiAr['sorttype1']=trim($sorttype1);  
            }         
            $successmsgdata=$request->session()->get('admin_successmsgdata_sess');
            $errormsgdata=$request->session()->get('admin_errormsgdata_sess');      
            if(!empty($successmsgdata)){
              $data['successmsgdata']=$successmsgdata;
            }
            if(!empty($errormsgdata)){
                  $data['errormsgdata']=$errormsgdata;               
            }
            $countries_db = DB::table('resolve_dispute as rd');
            $countries_db=$countries_db->select(DB::raw('rd.id,rd.gig_name,rd.dispute_opener_id,rd.gig_id,rd.gig_unique_id,rd.dispute_opening_date,rd.dispute_type,rd.issue_description,rd.arrival,rd.arrival_time,rd.required_specifications_availability,rd.able_to_complete,rd.technical_issue,rd.receive_rider,rd.leave_early,rd.leaving_time'));        
            $countries_db=$countries_db->where('rd.dispute_type', "1");
            $first_sql= DB::table('resolve_dispute')
                                ->join('user_master','user_master.id', '=', 'resolve_dispute.dispute_opener_id')
                                ->join('gig_master', 'gig_master.id', '=', 'resolve_dispute.gig_id')
                                ->select('gig_master.artist_id','user_master.email','user_master.nickname')
                                ->where('resolve_dispute.dispute_type', "1")
                                ->get();
         $artist_details=DB::table('user_master')->select('user_master.email','user_master.nickname')->where('id','=',$first_sql[0]->artist_id)->get();
            if(!empty($srch1))
            {
               $countries_db=$countries_db->where('rd.gig_name', 'like', "%".$srch1."%");   
            }
            
            
            if(!empty($sort1) && !empty($sorttype1) && (in_array(strtoupper($sorttype1),array('ASC','DESC'))))
            {
                  
                  $countries_db=$countries_db->orderBy('rd.'.$sort1, $sorttype1);
            }
                       
            $pagi_country=$countries_db;    
            $pagelimit=1;
            $staterow = DB::table('settings as st')->select(DB::raw('st.id,st.record_per_page_admin'))->where('st.id', 1)->first();                      
            if(!empty($staterow))
            {
                $pagelimit=$staterow->record_per_page_admin;
            }
           $pagi_country = $pagi_country->paginate($pagelimit);
           $pagi_country->setPath(url(ADMINSEPARATOR.'/admin_issue_with_artist'));          
            $data['pagi_country']=$pagi_country;
            $data['useinPagiAr']=$useinPagiAr;
            $data['first_sql']=$first_sql;
            $data['artist_details']=$artist_details;
           return view('admin.admin_issue_with_artist.admin_issue_with_artist_list', $data);
    }
         public function view(Request $request,$id=0)
    {
            //echo $id;die();
            $countries_db = DB::table('resolve_dispute as rd');
            $countries_db=$countries_db->select(DB::raw('rd.id,rd.gig_name,rd.dispute_opener_id,rd.gig_id,rd.gig_unique_id,rd.dispute_opening_date,rd.dispute_type,rd.issue_description,rd.arrival,rd.arrival_time,rd.required_specifications_availability,rd.able_to_complete,rd.technical_issue,rd.receive_rider,rd.leave_early,rd.leaving_time'));        
            $countries_db=$countries_db->where('rd.id',$id)->get();
            $first_sql= DB::table('resolve_dispute')
                                ->join('user_master','user_master.id', '=', 'resolve_dispute.dispute_opener_id')
                                ->join('gig_master', 'gig_master.id', '=', 'resolve_dispute.gig_id')
                                ->select('gig_master.artist_id','user_master.email','user_master.nickname')
                                ->where('resolve_dispute.dispute_type', "1")
                                ->get();
                                $artist_details=DB::table('user_master')->select('user_master.email','user_master.nickname')->where('id','=',$first_sql[0]->artist_id)->get();
           $pagi_country=$countries_db;
           $data['pagi_country']=$pagi_country;
           $data['first_sql']=$first_sql;
           $data['artist_details']=$artist_details;
        return view('admin.admin_issue_with_artist.admin_issue_with_artist_list_view', $data);
    }
     public function reply(Request $request)
        {
                
                $description = $request->input('description'); 
                $resolve_dispute_id = $request->input('resolve_dispute_id');
                $gig_id = $request->input('gig_id');
                $gig_unique_id = $request->input('gig_unique_id');
                $booker_id = $request->input('booker_id');
                $artist_id = $request->input('artist_id');
                $booker_ID = $request->input('booker_ID');
                $artist_ID = $request->input('artist_ID');
                
                //------getting the booker emailID-------//
                $booker_useremail = DB::table('user_master')->select('email','nickname')->where('id', $booker_id)->first();
                if(count($booker_useremail) > 0){
                      $booker_ori_email = $booker_useremail->email;
                      $booker_ori_nikname = $booker_useremail->nickname;
                      //echo $gig_id.'     '.$booker_ori_nikname;exit;
                }
                //---------END-----------------//
                
                //------getting the artist emailID-------//
                $artist_useremail = DB::table('user_master')->select('email','nickname')->where('id', $artist_id)->first();
                if(count($artist_useremail) > 0){
                      $artist_ori_email = $artist_useremail->email;
                      $artist_ori_nikname = $artist_useremail->nickname;
                }
                //---------END-----------------//
                
                //------getting the gig detail-------//
                $gigdetails = DB::table('gig_master')->select('event_start_date_time','event_city')->where('id', $gig_id)->first();
                if(count($gigdetails) > 0){
                      $event_start_date_time = $gigdetails->event_start_date_time;
                      $event_start_date = date('d/m/Y h:i A',strtotime($event_start_date_time));
                      $event_city = $gigdetails->event_city;
                }
                //---------END-----------------//
                
                //------getting details from settings for mail--------//
                $userssel = DB::table('settings')
                ->select(DB::raw('site_name,email_from,copyright_year,email_template_logo_image'))
                ->where('id', 1)->get();
                $sitename=$userssel[0]->site_name;
                $emailfrom=$userssel[0]->email_from;
                $copyright_year=$userssel[0]->copyright_year;
                $Imgologo=$userssel[0]->email_template_logo_image;
                $bsurl = url('/');
                $logoIMG = BASEURLPUBLICCUSTOM.'upload/settings-image/source-file/'.$Imgologo;
                //------END---------------------------//
                
                //---------getting the dispute date--------//
                $dispuTE_Date = DB::table('resolve_dispute')->select('dispute_opening_date')->where('id', $resolve_dispute_id)->first();
                if(count($dispuTE_Date) > 0){
                      $DisputeDatenor = $dispuTE_Date->dispute_opening_date;
                      $DisputeDate = date('d/m/Y h:i A',strtotime($DisputeDatenor));
                    
                }
                //--------END-----------------//
                
               //-----------Createing datainsert arrey for insert into resolve_dispute_replies table--------//
                $dataInsert = array(
                             'resolve_dispute_id'=>$resolve_dispute_id,
                             'gig_id'=>$gig_id,
                             'gig_unique_id'=>$gig_unique_id,
                             'dispute_type'=>'1',
                             'replied_by'=>'1',
                             'reply_content'=>$description
                        );
                //------------------------END---------------------------------------------//
                
                //--------------------Condition for replied_to_1 and replied_to_2---------//
                if($booker_ID != '' && $artist_ID==''){
                        $dataInsert['replied_to_1']= $booker_ID;
                        
                        $dataInserted = DB::table('resolve_dispute_replies')->insert($dataInsert);
                                if($dataInserted){
                                        //-----Mail send Function Starts here for booker--------//
                                        $replacefrom =array('{LOGO_IMG}','{BASE_URL}','{USER}','{DISPUTEDATE}','{ARTIST}','{STARTDATE}','{TOWN}','{REPLYCONTENT}','{SITENAME}','{YEAR}');
                                             $replaceto =array($logoIMG,$bsurl,$booker_ori_nikname,$DisputeDate,$artist_ori_nikname,$event_start_date,$event_city,$description,$sitename,$copyright_year);
                                        $sendMail =  mailsnd($Temid=30,$replacefrom,$replaceto,$booker_ori_email);
                                        //-----END------------------------------//
                                        if($sendMail){
                                                 echo'success'; 
                                        }
                                }
                        
                        
                }elseif($artist_ID != '' && $booker_ID==''){
                        
                        $dataInsert['replied_to_2']= $artist_ID;
                        $dataInserted = DB::table('resolve_dispute_replies')->insert($dataInsert);
                        if($dataInserted){
                                
                                 //-----Mail send Function Starts here for artist--------//
                                $replacefrom =array('{LOGO_IMG}','{BASE_URL}','{USER}','{BOOKERNAME}','{DISPUTEDATE}','{SELF}','{STARTDATE}','{TOWN}','{REPLYCONTENT}','{SITENAME}','{YEAR}');
                                $replaceto =array($logoIMG,$bsurl,$artist_ori_nikname,$booker_ori_nikname,$DisputeDate,'performed by you',$event_start_date,$event_city,$description,$sitename,$copyright_year);
                                $sendMail =  mailsnd($Temid=31,$replacefrom,$replaceto,$artist_ori_email);
                                //-----END------------------------------//
                                if($sendMail){
                                       echo'success'; 
                                }
                        }
                }elseif($booker_ID != '' && $artist_ID != ''){
                        $dataInsert['replied_to_1']= $booker_ID;
                        $dataInsert['replied_to_2']= $artist_ID;
                        
                        $dataInserted = DB::table('resolve_dispute_replies')->insert($dataInsert);
                        if($dataInserted){
                                //-----Mail send Function Starts here for booker--------//
                                $replacefrom =array('{LOGO_IMG}','{BASE_URL}','{USER}','{DISPUTEDATE}','{ARTIST}','{STARTDATE}','{TOWN}','{REPLYCONTENT}','{SITENAME}','{YEAR}');
                                $replaceto =array($logoIMG,$bsurl,$booker_ori_nikname,$DisputeDate,$artist_ori_nikname,$event_start_date,$event_city,$description,$sitename,$copyright_year);
                                $sendMail =  mailsnd($Temid=30,$replacefrom,$replaceto,$booker_ori_email);
                                //-----END------------------------------//
                                
                                //-----Mail send Function Starts here for artist--------//
                                $replacefrom =array('{LOGO_IMG}','{BASE_URL}','{USER}','{BOOKERNAME}','{DISPUTEDATE}','{SELF}','{STARTDATE}','{TOWN}','{REPLYCONTENT}','{SITENAME}','{YEAR}');
                                     $replaceto =array($logoIMG,$bsurl,$artist_ori_nikname,$booker_ori_nikname,$DisputeDate,'performed by you',$event_start_date,$event_city,$description,$sitename,$copyright_year);
                                $sendMail2 =  mailsnd($Temid=31,$replacefrom,$replaceto,$artist_ori_email);
                                //-----END------------------------------//
                        }
                }
                //------------------------------END-------------------------------------//
          
           
        }
    
}
        ?>