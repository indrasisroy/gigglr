<?php
namespace App\Http\Controllers\admin;
use Validator;
use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use App\Models\User;
use DB;
use Illuminate\Routing\Route;
class Admin_issue_with_group_Controller extends Controller
{       
        public function index(Request $request )
    {
            $data=array();
            $useinPagiAr=array();           
            $srch1=addslashes(trim($request->input('srch1','')));
            $sort1=addslashes(trim($request->input('sort1','')));
            $sorttype1=addslashes(trim($request->input('sorttype1','')));           
            if(!empty($srch1))
            {
                $useinPagiAr['srch1']=trim($srch1);  
            }            
            if(!empty($sort1))
            {
                $useinPagiAr['sort1']=trim($sort1);  
            }           
            if(!empty($sorttype1))
            {
                $useinPagiAr['sorttype1']=trim($sorttype1);  
            }         
            $successmsgdata=$request->session()->get('admin_successmsgdata_sess');
            $errormsgdata=$request->session()->get('admin_errormsgdata_sess');      
            if(!empty($successmsgdata)){
              $data['successmsgdata']=$successmsgdata;
            }
            if(!empty($errormsgdata)){
                  $data['errormsgdata']=$errormsgdata;               
            }
            
            
           
            
            
            $countries_db = DB::table('resolve_dispute as rd')
                ->Join('user_master as um', function($join)
                {
                        $join->on('um.id','=','rd.dispute_opener_id');
                })
                ->Join('gig_master as gm', function($join)
                {
                        $join->on('gm.id','=','rd.gig_id');
                })
                ->select('rd.id','rd.gig_name','rd.dispute_opener_id','rd.gig_id','rd.gig_unique_id','rd.dispute_opening_date','rd.dispute_type','rd.issue_description','rd.arrival','rd.arrival_time','rd.required_specifications_availability','rd.able_to_complete','rd.technical_issue','rd.receive_rider','rd.leave_early','rd.leaving_time','gm.artist_id','gm.event_start_date_time','um.email as booker_email','um.nickname as booker_nickname','um1.email as group_creater_email','um1.nickname as group_creater_nickname','grm.creater_id as group_creater_id','grm.nickname as group_nickname','grm.country as group_country','grm.state as group_state','grm.create_date as group_create_date','rd.dispute_resolved_status')
                
                ->Join('group_master as grm', function($join)
                {
                        $join->on('gm.artist_id','=','grm.id');
                })
                ->Join('user_master as um1', function($join)
                {
                        $join->on('um1.id','=','grm.creater_id');
                })
                
                
            
                
                ->where(function($query) use ($srch1){
                        if(!empty($srch1)){
                                
                            //$query->where('um.email', 'like', "%".$srch1."%");
                            $query->where('um.nickname', 'like', "%".$srch1."%");
                            //$query->orwhere('um1.email', 'like', "%".$srch1."%");
                            $query->orwhere('grm.nickname', 'like', "%".$srch1."%");
                            $query->orwhere('rd.gig_name', 'like', "%".$srch1."%");
                        }
                        
                })->where('rd.dispute_type','2');
            
                $all_data = $countries_db->get();                
                
                if(!empty($sort1) && !empty($sorttype1) && (in_array(strtoupper($sorttype1),array('ASC','DESC'))))
                {
                        
                        if($sort1 == 'gig_name'){
                                $countries_db=$countries_db->orderBy('rd.'.$sort1, $sorttype1);
                        }else if($sort1 == 'bookername'){
                                $countries_db=$countries_db->orderBy('um.nickname', $sorttype1);
                        }else if($sort1 == 'groupname'){
                                $countries_db=$countries_db->orderBy('um1.nickname', $sorttype1);
                        }else if($sort1 == 'resolved'){
                                $countries_db=$countries_db->orderBy('rd.dispute_resolved_status', $sorttype1);
                        }
                        
                }
                
            $pagi_country=$countries_db;
            $pagelimit=1;
            $staterow = DB::table('settings as st')->select(DB::raw('st.id,st.record_per_page_admin'))->where('st.id', 1)->first();                      
            if(!empty($staterow))
            {
                $pagelimit=$staterow->record_per_page_admin;
               //die();
            }
           $pagi_country = $pagi_country->paginate($pagelimit);
           $pagi_country->setPath(url(ADMINSEPARATOR.'/admin_issue_with_group'));          
                $data['pagi_country']=$pagi_country;
            $data['useinPagiAr']=$useinPagiAr;
//echo '<pre>';print_r($data);exit;
           return view('admin.admin_issue_with_group.admin_issue_with_group_list', $data);
    }
         public function view(Request $request,$id=0)
    {
            $countries_db = DB::table('resolve_dispute as rd')
                ->Join('user_master as um', function($join)
                {
                        $join->on('um.id','=','rd.dispute_opener_id');
                })
                ->Join('gig_master as gm', function($join)
                {
                        $join->on('gm.id','=','rd.gig_id');
                })
                ->select('rd.id','rd.gig_name','rd.dispute_opener_id','rd.gig_id','rd.gig_unique_id','rd.dispute_opening_date','rd.dispute_type','rd.issue_description','rd.arrival','rd.arrival_time','rd.required_specifications_availability','rd.able_to_complete','rd.technical_issue','rd.receive_rider','rd.leave_early','rd.leaving_time','gm.artist_id','gm.event_start_date_time','um.email as booker_email','um.nickname as booker_nickname','um1.email as group_creater_email','um1.nickname as group_creater_nickname','grm.creater_id as group_creater_id','grm.nickname as group_nickname','grm.country as group_country','grm.state as group_state','grm.create_date as group_create_date','rd.dispute_resolved_status')
                
                ->Join('group_master as grm', function($join)
                {
                        $join->on('gm.artist_id','=','grm.id');
                })
                ->Join('user_master as um1', function($join)
                {
                        $join->on('um1.id','=','grm.creater_id');
                })
                        ->where('rd.dispute_type','2')->where('rd.id',$id);
                
                $all_data = $countries_db->first();
                
              
                $data['pagi_country']=$all_data;
                
//echo '<pre>';print_r($data);exit;
        return view('admin.admin_issue_with_group.admin_issue_with_group_list_view', $data);
    }
        //public function reply(Request $request){
        //        
        //        $description = trim($request->input('description'));
        //        
        //        $resolve_dispute_id = $request->input('resolve_dispute_id');
        //        $dispute_opening_date = $request->input('dispute_opening_date');
        //        $dispute_type = $request->input('dispute_type');
        //        
        //        $gig_id = $request->input('gig_id');
        //        $gig_unique_id = $request->input('gig_unique_id');
        //        
        //        $booker_id = $request->input('booker_id');
        //        $group_id = $request->input('group_id');
        //        $booker_ID = $request->input('booker_ID');
        //        $group_ID = $request->input('group_ID');
        //        
        //        $group_creator_email = $request->input('group_creator_email');
        //        $group_creator_id = $request->input('group_creator_id');
        //        $group_nickname = $request->input('group_nickname');  
        //        
        //        //------getting the booker emailID and nickname-------//
        //        $booker_useremail = DB::table('user_master')->select('email','nickname')->where('id', $booker_id)->first();
        //        if(count($booker_useremail) > 0){
        //                
        //                $booker_ori_email = $booker_useremail->email;
        //                $booker_ori_nikname = $booker_useremail->nickname;
        //               
        //        }else{
        //               echo'Probably booker is deleted';exit;
        //        }
        //        //---------END-----------------//
        //        
        //        //------getting the group creator emailID nickname-------//
        //        $group_creator_details = DB::table('user_master')->select('email','nickname')->where('id', $group_creator_id)->first();
        //        if(count($group_creator_details) > 0){
        //                
        //                $group_creator_email = $group_creator_details->email;
        //                $group_creator_ori_nikname = $group_creator_details->nickname;
        //        }else{
        //                echo'Probably group creater is deleted';exit;
        //        }
        //        //---------END-----------------//
        //        
        //        //------getting the gig detail-------//
        //        $gigdetails = DB::table('gig_master')->select('event_start_date_time','event_city')->where('id', $gig_id)->first();
        //        if(count($gigdetails) > 0){
        //              $event_start_date_time = $gigdetails->event_start_date_time;
        //              $event_start_date = date('d/m/Y h:i A',strtotime($event_start_date_time));
        //              $event_city = $gigdetails->event_city;
        //        }
        //        //---------END-----------------//
        //        
        //        //------getting details from settings for mail--------//
        //        $userssel = DB::table('settings')
        //        ->select(DB::raw('site_name,email_from,copyright_year,email_template_logo_image'))
        //        ->where('id', 1)->get();
        //        $sitename=$userssel[0]->site_name;
        //        $emailfrom=$userssel[0]->email_from;
        //        $copyright_year=$userssel[0]->copyright_year;
        //        $Imgologo=$userssel[0]->email_template_logo_image;
        //        $bsurl = url('/');
        //        $logoIMG = BASEURLPUBLICCUSTOM.'upload/settings-image/source-file/'.$Imgologo;
        //        //------END---------------------------//
        //        
        //        //---------formating the dispute date--------//
        //        $DisputeDate = date('d/m/Y h:i A',strtotime($dispute_opening_date));
        //        //--------END-----------------//
        //        
        //        //-----------Createing datainsert arrey for insert into resolve_dispute_replies table--------//
        //        $dataInsert = array(
        //                     'resolve_dispute_id'=>$resolve_dispute_id,
        //                     'gig_id'=>$gig_id,
        //                     'gig_unique_id'=>$gig_unique_id,
        //                     'dispute_type'=>'2',
        //                     'replied_by'=>'1',
        //                     'reply_content'=>$description
        //                );
        //        //------------------------END---------------------------------------------//
        //        
        //        //--------------------Condition for replied_to_1 and replied_to_2---------//
        //        if($booker_ID != '' && $group_ID==''){
        //                $dataInsert['replied_to_1']= $booker_ID;
        //                $dataInserted = DB::table('resolve_dispute_replies')->insert($dataInsert);
        //                        if($dataInserted){
        //                               
        //                                //-----Mail send Function Starts here for booker--------//
        //                                $replacefrom =array('{LOGO_IMG}','{BASE_URL}','{USER}','{DISPUTEDATE}','{ARTIST}','{STARTDATE}','{TOWN}','{REPLYCONTENT}','{SITENAME}','{YEAR}');
        //                                     $replaceto =array($logoIMG,$bsurl,$booker_ori_nikname,$DisputeDate,$group_nickname,$event_start_date,$event_city,$description,$sitename,$copyright_year);
        //                                $sendMail =  mailsnd($Temid=30,$replacefrom,$replaceto,$booker_ori_email);
        //                                //-----END------------------------------//
        //                        }
        //        }elseif($group_ID != '' && $booker_ID==''){
        //                
        //                $dataInsert['replied_to_2']= $group_ID;
        //                $dataInserted = DB::table('resolve_dispute_replies')->insert($dataInsert);
        //                if($dataInserted){
        //                        
        //                        //-----Mail send Function Starts here for group--------//
        //                        $replacefrom =array('{LOGO_IMG}','{BASE_URL}','{USER}','{BOOKERNAME}','{DISPUTEDATE}','{SELF}','{STARTDATE}','{TOWN}','{REPLYCONTENT}','{SITENAME}','{YEAR}');
        //                        $replaceto =array($logoIMG,$bsurl,$group_creator_ori_nikname,$booker_ori_nikname,$DisputeDate,'performed by your '.$group_nickname.' group',$event_start_date,$event_city,$description,$sitename,$copyright_year);
        //                        $sendMail =  mailsnd($Temid=31,$replacefrom,$replaceto,$group_creator_email);
        //                        //-----END------------------------------//
        //                       
        //                }
        //        }elseif($booker_ID != '' && $group_ID != ''){
        //                $dataInsert['replied_to_1']= $booker_ID;
        //                $dataInsert['replied_to_2']= $group_ID;
        //                
        //                $dataInserted = DB::table('resolve_dispute_replies')->insert($dataInsert);
        //                if($dataInserted){
        //                       
        //                        //-----Mail send Function Starts here for booker--------//
        //                        $replacefrom =array('{LOGO_IMG}','{BASE_URL}','{USER}','{DISPUTEDATE}','{ARTIST}','{STARTDATE}','{TOWN}','{REPLYCONTENT}','{SITENAME}','{YEAR}');
        //                             $replaceto =array($logoIMG,$bsurl,$booker_ori_nikname,$DisputeDate,$group_nickname,$event_start_date,$event_city,$description,$sitename,$copyright_year);
        //                        $sendMail =  mailsnd($Temid=30,$replacefrom,$replaceto,$booker_ori_email);
        //                        //-----END------------------------------//
        //                        
        //                        //-----Mail send Function Starts here for group--------//
        //                        $replacefrom =array('{LOGO_IMG}','{BASE_URL}','{USER}','{BOOKERNAME}','{DISPUTEDATE}','{SELF}','{STARTDATE}','{TOWN}','{REPLYCONTENT}','{SITENAME}','{YEAR}');
        //                        $replaceto =array($logoIMG,$bsurl,$group_creator_ori_nikname,$booker_ori_nikname,$DisputeDate,'performed by your '.$group_nickname.'  group',$event_start_date,$event_city,$description,$sitename,$copyright_year);
        //                        $sendMail =  mailsnd($Temid=31,$replacefrom,$replaceto,$group_creator_email);
        //                        //-----END------------------------------//
        //                }
        //        }
        //}
        
        public function reply_view(Request $request,$id=0){
                
          $countries_db = DB::table('resolve_dispute as rd')
                ->Join('user_master as um', function($join)
                {
                        $join->on('um.id','=','rd.dispute_opener_id');
                })
                ->Join('gig_master as gm', function($join)
                {
                        $join->on('gm.id','=','rd.gig_id');
                })
                ->select('rd.id','rd.gig_name','rd.dispute_opener_id','rd.gig_id','rd.gig_unique_id','rd.dispute_opening_date','rd.dispute_type','rd.issue_description','rd.arrival','rd.arrival_time','rd.required_specifications_availability','rd.able_to_complete','rd.technical_issue','rd.receive_rider','rd.leave_early','rd.leaving_time','gm.artist_id','gm.event_start_date_time','gm.total_amount','um.email as booker_email','um.nickname as booker_nickname','um1.email as group_creater_email','um1.nickname as group_creater_nickname','grm.creater_id as group_creater_id','grm.nickname as group_nickname','grm.country as group_country','grm.state as group_state','grm.create_date as group_create_date','rd.dispute_resolved_status','gm.booker_id','gm.artist_security_deposit')
                
                ->Join('group_master as grm', function($join)
                {
                        $join->on('gm.artist_id','=','grm.id');
                })
                ->Join('user_master as um1', function($join)
                {
                        $join->on('um1.id','=','grm.creater_id');
                })
                        ->where('rd.dispute_type','2')->where('rd.id',$id);

                $all_data = $countries_db->first();
                $pagi_country=$all_data;
                //echo '<pre>'; print_r($all_data); exit;
                //------------for listing of repli messeges----------//
                
           $all_reply_data = DB::table('resolve_dispute_replies as rdr')
                        ->Join('user_master as um', function($join) 
                                {
                                     $join->on('um.id','=','rdr.replied_by');
                                        
                                })
                        ->select('rdr.*','um.nickname as reply_by_user')
                        ->where('rdr.resolve_dispute_id',$id);
                $all_data_get = $all_reply_data->orderby('rdr.id','DESC')->skip(0)->take(4)->get();
                $total_data = $all_reply_data->count();
                //echo '<pre>'; print_r($all_data_get);exit;
                //------------------END-----------------------//
                $data['pagi_country']=$pagi_country;
                $data['reply_messeges']=$all_data_get;
                $data['total_data']=$total_data;
                
                if($pagi_country->dispute_resolved_status == '1'){

                        $booker_amount = DB::table('user_order as uo')
                                        ->select('uo.total_price')
                                        ->where('uo.gigmaster_id',$pagi_country->gig_id)
                                        ->where('uo.user_id',$pagi_country->booker_id)
                                        ->where('uo.payment_for','DPR')->first();
                                        
                        $artist_amount = DB::table('user_order as uo')
                                        ->select('uo.total_price','uo.modified_date')
                                        ->where('uo.gigmaster_id',$pagi_country->gig_id)
                                        ->where('uo.user_id',$pagi_country->group_creater_id)
                                        ->where('uo.payment_for','DPR')->first();
                        $data['dispute_resolved_amount']['booker_amount']=$booker_amount->total_price;
                        $data['dispute_resolved_amount']['artist_amount']=$artist_amount->total_price;
                        $data['dispute_resolved_amount']['modified_date']=$artist_amount->modified_date;
                }else{
                        $data['dispute_resolved_amount']['booker_amount']=0;
                        $data['dispute_resolved_amount']['artist_amount']=0;
                        $data['dispute_resolved_amount']['modified_date']=0;
                }
           //echo '<pre>';print_r($data);exit;
           
        $srmdetails = array();
        if($pagi_country->artist_security_deposit != '0.00' && $pagi_country->artist_security_deposit > 0){
        $srm = DB::table('user_order as uo')
        ->select('uo.total_price')
        ->where('uo.gigmaster_id',$pagi_country->gig_id)
        ->where('uo.payment_for','SMR')->first();
        $srmdetails = $srm;
        }
        $data['sddetails']['total_amount']=$pagi_country->total_amount;
        if(!empty($srmdetails)){
        $data['sddetails']['total_amount']=$pagi_country->total_amount - $srmdetails->total_price;
        
        }
           
           return view('admin.admin_issue_with_group.admin_issue_with_group_reply_view', $data);
           //echo '<pre>';print_r($data);exit;
        }
        
}
        ?>